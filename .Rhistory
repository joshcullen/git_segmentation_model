names(obs1.breakpts)<- "breaks"
obs1=data.frame(obs) %>% filter(id == 1) %>% dplyr::select(-id)
names(obs1)<- 1:378
obs1.long<- obs1 %>% gather(key, value) %>% mutate(time=rep(1:9134, times=378))
obs1.long$key<- as.numeric(obs1.long$key)
ggplot(obs1.long, aes(x=time, y=key, fill=value)) +
geom_tile() +
scale_fill_viridis_c(guide=F) +
scale_y_continuous(breaks = c(0,100,200,300), expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
geom_vline(data = obs1.breakpts, aes(xintercept = breaks), color = viridis(n=9)[7], size = 0.35) +
labs(x = "Observations", y = "Grid Cell") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
library(viridis)
ggplot(obs1.long, aes(x=time, y=key, fill=value)) +
geom_tile() +
scale_fill_viridis_c(guide=F) +
scale_y_continuous(breaks = c(0,100,200,300), expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
geom_vline(data = obs1.breakpts, aes(xintercept = breaks), color = viridis(n=9)[7], size = 0.35) +
labs(x = "Observations", y = "Grid Cell") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
unique(dat.long$loc.id)
View(dat.list2)
View(dat.list2[["1"]])
nrow(dat.list2[[1]]
)
length(unique(dat.long$loc.id))
obs<- matrix(0, nrow(dat.list2[[1]]), length(unique(dat.long$loc.id)))
dim(obs)
colSums(obs)
obs[dat.list2[[1]]$time1, dat.list2[[1]]$loc.id]<- 1
colSums(obs)
dat.list2[[1]]$time1 %>% slice(n=-1)
dat.list2[[1]] %>% slice(n=-1)
dat.list2[[1]] %>% top_n(n=-1)
dat.list2[[1]] %>% top_n(n=1)
dat.list2[[1]] %>% top_n(n=1, by = time1)
dat.list2[[1]] %>% top_n(n=1, time1)
nrow(dat.list2[[1]])
for (i in 1:nrow(dat.list2[[1]])) {
obs[i, dat.list2[[1]]$loc.id[i]]<- 1
}
colSums(obs)
obs<- matrix(0, nrow(dat.list2[[1]]), length(unique(dat.long$loc.id)))
for (i in 1:nrow(dat.list2[[1]])) {
obs[i, dat.list2[[1]]$loc.id[i]]<- 1
}
colSums(obs)
table(dat.list2[[1]])
table(dat.list2[[1]]$time1)
table(dat.list2[[1]]$loc.id)
colSums(obs)
dim(obs)
obs< data.frame(obs)
obs<- data.frame(obs)
View(obs)
## Heatmaps
nloc<- length(unique(dat.long$loc.id))
nobs<- nrow(dat.list2[[1]])
obs<- matrix(0, nobs, nloc)
for (i in 1:nrow(dat.list2[[1]])) {
obs[i, dat.list2[[1]]$loc.id[i]]<- 1
}
obs<- data.frame(obs)
names(obs)<- 1:nloc
which(unique(dat.list2[[1]]$id) == identity)
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na)
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na) %>% t()
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na) %>% t() %>% data.frame(breaks = .)
View(breakpt)
View(breakpt)
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na) %>% t() %>% data.frame(breaks = .)
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na) %>% t() %>% data.frame()
View(breakpt)
names(breakpt)<- "breaks"
obs<- data.frame(obs)
names(obs)<- 1:nloc
obs.long<- obs %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs.long$key<- as.numeric(obs.long$key)
tmp=which(unique(dat.list2[[1]]$id) == identity)
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na) %>% t() %>% data.frame()
names(breakpt)<- "breaks"
ggplot(obs.long, aes(x=time, y=key, fill=value)) +
geom_tile() +
scale_fill_viridis_c(guide=F) +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
geom_vline(data = breakpt, aes(xintercept = breaks), color = viridis(n=9)[7], size = 0.35) +
labs(x = "Observations", y = "Grid Cell") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
image(obs)
image(as.matrix(obs))
#------------------------------------------------
heatmap=function(data) {
par(ask = TRUE)
nloc<- length(unique(dat.long$loc.id))
nobs<- nrow(data)
obs<- matrix(0, nobs, nloc)
for (i in 1:nrow(data)) {
obs[i, data$loc.id[i]]<- 1
}
obs<- data.frame(obs)
names(obs)<- 1:nloc
obs.long<- obs %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs.long$key<- as.numeric(obs.long$key)
tmp=which(unique(data$id) == identity)
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na) %>% t() %>% data.frame()
names(breakpt)<- "breaks"
ggplot(obs.long, aes(x=time, y=key, fill=value)) +
geom_tile() +
scale_fill_viridis_c(guide=F) +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
geom_vline(data = breakpt, aes(xintercept = breaks), color = viridis(n=9)[7], size = 0.35) +
labs(x = "Observations", y = "Grid Cell") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
on.exit(par(ask = FALSE))
}
heatmap(dat.list2)
heatmap(dat.list2[[18]])
#------------------------------------------------
heatmap=function(data) {
par(ask = TRUE)
nloc<- length(unique(dat.long$loc.id))
nobs<- nrow(data)
obs<- matrix(0, nobs, nloc)
for (i in 1:nrow(data)) {
obs[i, data$loc.id[i]]<- 1
}
obs<- data.frame(obs)
names(obs)<- 1:nloc
obs.long<- obs %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs.long$key<- as.numeric(obs.long$key)
tmp=which(unique(data$id) == identity)
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na) %>% t() %>% data.frame()
names(breakpt)<- "breaks"
print(
ggplot(obs.long, aes(x=time, y=key, fill=value)) +
geom_tile() +
scale_fill_viridis_c(guide=F) +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
geom_vline(data = breakpt, aes(xintercept = breaks), color = viridis(n=9)[7], size = 0.35) +
labs(x = "Observations", y = "Grid Cell") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
)
on.exit(par(ask = FALSE))
}
heatmap(dat.list2[[18]])
data=dat.list2$`28`
nloc<- length(unique(dat.long$loc.id))
nobs<- nrow(data)
obs<- matrix(0, nobs, nloc)
for (i in 1:nrow(data)) {
obs[i, data$loc.id[i]]<- 1
}
obs<- data.frame(obs)
colSums(obs)
obs<- matrix(0, nobs, nloc)
for (i in 1:nrow(data)) {
obs[i, data$loc.id[i]]<- 1
}
colSums(obs)
colSums(obs) %>% sum()
names(obs)<- 1:nloc
obs.long<- obs %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
for (i in 1:nrow(data)) {
obs[i, data$loc.id[i]]<- 1
}
obs<- data.frame(obs)
obs<- matrix(0, nobs, nloc)
for (i in 1:nrow(data)) {
obs[i, data$loc.id[i]]<- 1
}
obs<- data.frame(obs)
names(obs)<- 1:nloc
obs.long<- obs %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs.long$key<- as.numeric(obs.long$key)
tmp=which(unique(data$id) == identity)
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na) %>% t() %>% data.frame()
names(breakpt)<- "breaks"
ggplot(obs.long, aes(x=time, y=key, fill=value)) +
geom_tile() +
scale_fill_viridis_c(guide=F) +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
geom_vline(data = breakpt, aes(xintercept = breaks), color = viridis(n=9)[7], size = 0.35) +
labs(x = "Observations", y = "Grid Cell") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
#re-define loc.id based only on those visited by this individual
uni.loc=unique(data$loc.id)
aux=data.frame(loc.id=uni.loc,loc.id1=1:length(uni.loc))
aux
dat1=merge(data,aux,all=T)
dat1$loc.id=dat1$loc.id1
View(dat1)
dat=dat1[order(dat1$time1),c('loc.id','time1')]
View(dat)
nloc<- length(uni.loc)
nobs<- nrow(data)
obs<- matrix(0, nobs, nloc)
for (i in 1:nrow(data)) {
obs[i, dat$loc.id[i]]<- 1
}
View(obs)
obs<- data.frame(obs)
names(obs)<- 1:nloc
names(obs)
obs.long<- obs %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs.long$key<- as.numeric(obs.long$key)
tmp=which(unique(data$id) == identity)
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na) %>% t() %>% data.frame()
names(breakpt)<- "breaks"
ggplot(obs.long, aes(x=time, y=key, fill=value)) +
geom_tile() +
scale_fill_viridis_c(guide=F) +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
geom_vline(data = breakpt, aes(xintercept = breaks), color = viridis(n=9)[7], size = 0.35) +
labs(x = "Observations", y = "Grid Cell") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
#------------------------------------------------
heatmap=function(data) {
par(ask = TRUE)
#re-define loc.id based only on those visited by this individual
uni.loc=unique(data$loc.id)
aux=data.frame(loc.id=uni.loc,loc.id1=1:length(uni.loc))
dat1=merge(data,aux,all=T)
dat1$loc.id=dat1$loc.id1
dat=dat1[order(dat1$time1),c('loc.id','time1')]
nloc<- length(uni.loc)
nobs<- nrow(data)
obs<- matrix(0, nobs, nloc)
for (i in 1:nrow(data)) {
obs[i, dat$loc.id[i]]<- 1
}
obs<- data.frame(obs)
names(obs)<- 1:nloc
obs.long<- obs %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs.long$key<- as.numeric(obs.long$key)
tmp=which(unique(data$id) == identity)
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na) %>% t() %>% data.frame()
names(breakpt)<- "breaks"
print(
ggplot(obs.long, aes(x=time, y=key, fill=value)) +
geom_tile() +
scale_fill_viridis_c(guide=F) +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
geom_vline(data = breakpt, aes(xintercept = breaks), color = viridis(n=9)[7], size = 0.35) +
labs(x = "Observations", y = "Grid Cell") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
)
on.exit(par(ask = FALSE))
}
heatmap(dat.list2[[5]])
heatmap(dat.list2[[8]])
heatmap(dat.list2[[`19`]])
heatmap(dat.list2[["19"]])
## Heatmaps;  may take a while to load for high dim matrices
map(dat.list2, heatmap)
#------------------------------------------------
heatmap=function(data) {
par(ask = TRUE)
#re-define loc.id based only on those visited by this individual
uni.loc=unique(data$loc.id)
aux=data.frame(loc.id=uni.loc,loc.id1=1:length(uni.loc))
dat1=merge(data,aux,all=T)
dat1$loc.id=dat1$loc.id1
dat=dat1[order(dat1$time1),c('loc.id','time1')]
nloc<- length(uni.loc)
nobs<- nrow(data)
obs<- matrix(0, nobs, nloc)
for (i in 1:nrow(data)) {
obs[i, dat$loc.id[i]]<- 1
}
obs<- data.frame(obs)
names(obs)<- 1:nloc
obs.long<- obs %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs.long$key<- as.numeric(obs.long$key)
tmp=which(unique(data$id) == identity)
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na) %>% t() %>% data.frame()
names(breakpt)<- "breaks"
print(
ggplot(obs.long, aes(x=time, y=key, fill=value)) +
geom_tile() +
scale_fill_viridis_c(guide=F) +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
geom_vline(data = breakpt, aes(xintercept = breaks), color = viridis(n=9)[7], size = 0.35) +
labs(x = "Observations", y = "Grid Cell") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16)) +
labs(title = paste("ID", unique(data$id)))
)
on.exit(par(ask = FALSE))
}
## Heatmaps;  may take a while to load for high dim matrices
map(dat.list2, heatmap)
plot(dat.res$LML[1,-1], type = 'l')
plot(dat.res$LML[1,], type = 'l')
plot(dat.res$LML[1,])
#------------------------------------------------
heatmap=function(data) {
par(ask = TRUE)
#re-define loc.id based only on those visited by this individual
uni.loc=unique(data$loc.id)
aux=data.frame(loc.id=uni.loc,loc.id1=1:length(uni.loc))
dat1=merge(data,aux,all=T)
dat1$loc.id=dat1$loc.id1
dat=dat1[order(dat1$time1),c('loc.id','time1')]
nloc<- length(uni.loc)
nobs<- nrow(data)
obs<- matrix(0, nobs, nloc)
for (i in 1:nrow(data)) {
obs[i, dat$loc.id[i]]<- 1
}
obs<- data.frame(obs)
names(obs)<- 1:nloc
obs.long<- obs %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs.long$key<- as.numeric(obs.long$key)
tmp=which(unique(data$id) == identity)
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na) %>% t() %>% data.frame()
names(breakpt)<- "breaks"
print(
ggplot(obs.long, aes(x=time, y=key, fill=value)) +
geom_tile() +
scale_fill_viridis_c(guide=F) +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
geom_vline(data = breakpt, aes(xintercept = breaks), color = viridis(n=9)[7], size = 0.35) +
labs(x = "Observations", y = "Grid Cell") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16)) +
labs(title = paste("ID", unique(data$id)))
)
par(ask = FALSE)
}
## Heatmaps;  may take a while to load for high dim matrices
map(dat.list2, heatmap)
par(ask = FALSE)
#------------------------------------------------
heatmap=function(data) {
# par(ask = TRUE)
#re-define loc.id based only on those visited by this individual
uni.loc=unique(data$loc.id)
aux=data.frame(loc.id=uni.loc,loc.id1=1:length(uni.loc))
dat1=merge(data,aux,all=T)
dat1$loc.id=dat1$loc.id1
dat=dat1[order(dat1$time1),c('loc.id','time1')]
nloc<- length(uni.loc)
nobs<- nrow(data)
obs<- matrix(0, nobs, nloc)
for (i in 1:nrow(data)) {
obs[i, dat$loc.id[i]]<- 1
}
obs<- data.frame(obs)
names(obs)<- 1:nloc
obs.long<- obs %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs.long$key<- as.numeric(obs.long$key)
tmp=which(unique(data$id) == identity)
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na) %>% t() %>% data.frame()
names(breakpt)<- "breaks"
print(
ggplot(obs.long, aes(x=time, y=key, fill=value)) +
geom_tile() +
scale_fill_viridis_c(guide=F) +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
geom_vline(data = breakpt, aes(xintercept = breaks), color = viridis(n=9)[7], size = 0.35) +
labs(x = "Observations", y = "Grid Cell") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16)) +
labs(title = paste("ID", unique(data$id)))
)
# par(ask = FALSE)
}
## Heatmaps;  may take a while to load for high dim matrices
map(dat.list2, heatmap)
#------------------------------------------------
heatmap=function(data) {
par(ask = TRUE)
#re-define loc.id based only on those visited by this individual
uni.loc=unique(data$loc.id)
aux=data.frame(loc.id=uni.loc,loc.id1=1:length(uni.loc))
dat1=merge(data,aux,all=T)
dat1$loc.id=dat1$loc.id1
dat=dat1[order(dat1$time1),c('loc.id','time1')]
nloc<- length(uni.loc)
nobs<- nrow(data)
obs<- matrix(0, nobs, nloc)
for (i in 1:nrow(data)) {
obs[i, dat$loc.id[i]]<- 1
}
obs<- data.frame(obs)
names(obs)<- 1:nloc
obs.long<- obs %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs.long$key<- as.numeric(obs.long$key)
tmp=which(unique(data$id) == identity)
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na) %>% t() %>% data.frame()
names(breakpt)<- "breaks"
print(
ggplot(obs.long, aes(x=time, y=key, fill=value)) +
geom_tile() +
scale_fill_viridis_c(guide=F) +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
geom_vline(data = breakpt, aes(xintercept = breaks), color = viridis(n=9)[7], size = 0.35) +
labs(x = "Observations", y = "Grid Cell") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16)) +
labs(title = paste("ID", unique(data$id)))
)
# par(ask = FALSE)
}
## Heatmaps;  may take a while to load for high dim matrices
map(dat.list2, heatmap)
#------------------------------------------------
plot.heatmap=function(data) {
par(ask = TRUE)
#re-define loc.id based only on those visited by this individual
uni.loc=unique(data$loc.id)
aux=data.frame(loc.id=uni.loc,loc.id1=1:length(uni.loc))
dat1=merge(data,aux,all=T)
dat1$loc.id=dat1$loc.id1
dat=dat1[order(dat1$time1),c('loc.id','time1')]
nloc<- length(uni.loc)
nobs<- nrow(data)
obs<- matrix(0, nobs, nloc)
for (i in 1:nrow(data)) {
obs[i, dat$loc.id[i]]<- 1
}
obs<- data.frame(obs)
names(obs)<- 1:nloc
obs.long<- obs %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs.long$key<- as.numeric(obs.long$key)
tmp=which(unique(data$id) == identity)
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na) %>% t() %>% data.frame()
names(breakpt)<- "breaks"
print(
ggplot(obs.long, aes(x=time, y=key, fill=value)) +
geom_tile() +
scale_fill_viridis_c(guide=F) +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
geom_vline(data = breakpt, aes(xintercept = breaks), color = viridis(n=9)[7], size = 0.35) +
labs(x = "Observations", y = "Grid Cell") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16)) +
labs(title = paste("ID", unique(data$id)))
)
# par(ask = FALSE)
}
#------------------------------------------------
heatmap=function(data) {
par(ask = TRUE)
map(data, heatmap)
par(ask = FALSE)
}
#------------------------------------------------
plot.heatmap=function(data) {
#re-define loc.id based only on those visited by this individual
uni.loc=unique(data$loc.id)
aux=data.frame(loc.id=uni.loc,loc.id1=1:length(uni.loc))
dat1=merge(data,aux,all=T)
dat1$loc.id=dat1$loc.id1
dat=dat1[order(dat1$time1),c('loc.id','time1')]
nloc<- length(uni.loc)
nobs<- nrow(data)
obs<- matrix(0, nobs, nloc)
for (i in 1:nrow(data)) {
obs[i, dat$loc.id[i]]<- 1
}
obs<- data.frame(obs)
names(obs)<- 1:nloc
obs.long<- obs %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs.long$key<- as.numeric(obs.long$key)
tmp=which(unique(data$id) == identity)
breakpt<- dat.res$brkpts[tmp,-1] %>% discard(is.na) %>% t() %>% data.frame()
names(breakpt)<- "breaks"
print(
ggplot(obs.long, aes(x=time, y=key, fill=value)) +
geom_tile() +
scale_fill_viridis_c(guide=F) +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
geom_vline(data = breakpt, aes(xintercept = breaks), color = viridis(n=9)[7], size = 0.35) +
labs(x = "Observations", y = "Grid Cell") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16)) +
labs(title = paste("ID", unique(data$id)))
)
}
#------------------------------------------------
heatmap=function(data) {
par(ask = TRUE)
map(data, plot.heatmap)
par(ask = FALSE)
}
## Heatmaps;  may take a while to load for high dim matrices
heatmap(dat.list2)
setwd("~/Documents/Snail Kite Project/Data/R Scripts/activity_center1")
write.csv(dat, "Snail Kite Gridded Data_large.csv", row.names = F)
