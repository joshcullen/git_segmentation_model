tmp<- which(apply(obs[,-1], 2, sum) > 100)
ac.coord.init<- grid.coord[tmp,]
View(grid.coord)
ac.coord.init<- grid.coord[tmp,-1]
View(ac.coord.init)
ac.coord.init<- grid.coord[tmp,-3]
View(ac.coord.init)
#basic setup
ngibbs=1000
nburn=ngibbs/2
n.ac=nrow(ac.coord.init)
gamma1=0.1
#run gibbs sampler
options(warn=2)
dat<- obs1.seg ###WILL NEED TO CHANGE THIS LATER
res=gibbs.activity.center(dat=dat,grid.coord=grid.coord,n.ac=n.ac,
ac.coord.init=ac.coord.init,gamma1=gamma1)
plot(res$logl,type='l')
plot(res$phi,type='l')
res$z[ngibbs,]
k=data.frame(estim=res$z[ngibbs,])
table(k)
table(k) %>% sum()
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ",")
View(grid.coord)
View(dat)
View(grid.coord)
dat<- left_join(dat, grid.coord, by="grid.cell")
library(sf)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
ggplot() +
geom_sf(data = fl) +
coord_sf(xlim = c(min(dat$utmlong-20000), max(dat$utmlong+20000)),
ylim = c(min(dat$utmlat-20000), max(dat$utmlat+20000)), expand = FALSE)
#Load world map data
usa <- ne_states(country = "United States of America", returnclass = "sf")
fl<- usa %>% filter(name == "Florida")
fl<- st_transform(fl, crs = "+init=epsg:32617") #change projection to UTM 17N
library(sf)
fl<- st_transform(fl, crs = "+init=epsg:32617") #change projection to UTM 17N
options(warn = 1)
fl<- st_transform(fl, crs = "+init=epsg:32617") #change projection to UTM 17N
fl<- sf::st_transform(fl, crs = "+init=epsg:32617") #change projection to UTM 17N
ggplot() +
geom_sf(data = fl) +
coord_sf(xlim = c(min(dat$utmlong-20000), max(dat$utmlong+20000)),
ylim = c(min(dat$utmlat-20000), max(dat$utmlat+20000)), expand = FALSE)
#Create grid cell borders
borders_5<- rasterToPolygons(grid_5, dissolve = F)
borders_5f<- fortify(borders_5)
k
View(dat1)
foo<- grid.summary.table(dat1, CRS("+init=epsg:32617"))
View(foo)
View(dat)
foo<- grid.summary.table(dat, CRS("+init=epsg:32617"))
View(foo)
View(grid.coord)
View(foo)
#------------------------------------------------
grid.summary.table=function(dat,crs){  #dat must already have time.seg assigned
#create grid and extract coords per cell
grid_5<- raster(extent(min(dat$utmlong), max(dat$utmlong),
min(dat$utmlat), max(dat$utmlat)) + 10000)
res(grid_5)<- 5000
proj4string(grid_5)<- crs
grid_5[]<- 0
grid.cell.locs<- coordinates(grid_5) %>% data.frame()
names(grid.cell.locs)<- c("x", "y")
grid.cell.locs$grid.cell<- 1:length(grid_5)
grid.coord<- grid.cell.locs[grid.cell.locs$grid.cell %in% dat$grid.cell,]
grid.coord
}
foo2<- grid.summary.table(dat, CRS("+init=epsg:32617"))
View(foo2)
grid.coord<- grid.summary.table(dat = dat, crs = CRS('+init=epsg:32617'))
View(grid.coord)
View(dat)
summary(dat$x)
View(dat)
View(dat1)
View(obs1.seg)
View(dat1)
dat<- rbind(dat1, dat12, dat19, dat27)
View(dat)
setwd("~/Documents/Snail Kite Project/Data/R Scripts/activity_center1")
table(dat$time.seg)
table(dat$id)
k
dat<- obs1.seg ###WILL NEED TO CHANGE THIS LATER
k=data.frame(estim=res$z[ngibbs,], time.seg = 1:nrow(dat))
table(k$estim)
k
z=data.frame(z=res$z[ngibbs,], time.seg = 1:nrow(dat))
table(z$z)
View(dat1)
dat1<- left_join(dat1, z, by = "time.seg")
getwd()
write.csv(dat, "Snail Kite Gridded Data_Seg.csv", row.names = F)
dat<- read.csv("Snail Kite Gridded Data_Seg.csv", header = T, sep = ",")
View(dat)
#load data
setwd("~/Documents/Snail Kite Project/Data")
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ",")
View(dat)
dat1=dat %>% filter(id==1)
dat1<- assign.time.seg(obs1.seg, obs1.breakpts, dat1)
dat12=dat %>% filter(id==12)
dat12<- assign.time.seg(obs12.seg, obs12.breakpts, dat12)
dat19=dat %>% filter(id==19)
dat19<- assign.time.seg(obs19.seg, obs19.breakpts, dat19)
dat27=dat %>% filter(id==27)
dat27<- assign.time.seg(obs27.seg, obs27.breakpts, dat27)
dat<- rbind(dat1, dat12, dat19, dat27)
View(dat)
setwd("/Users/joshcullen/Documents/Snail Kite Project/Data/R Scripts/activity_center1")
write.csv(dat, "Snail Kite Gridded Data_Seg.csv", row.names = F)
dat<- read.csv("Snail Kite Gridded Data_Seg.csv", header = T, sep = ",")
View(dat)
dat<- left_join(dat, grid.coord, by="grid.cell") #add gridded locs to DF
View(dat)
dat1<- dat %>% filter(id == 1)
View(dat1)
dat1<- left_join(dat1, z, by = "time.seg")
ggplot() +
geom_sf(data = fl) +
coord_sf(xlim = c(min(dat$utmlong-20000), max(dat$utmlong+20000)),
ylim = c(min(dat$utmlat-20000), max(dat$utmlat+20000)), expand = FALSE) +
geom_path(data = borders_5f, aes(x=long, y=lat, group=group), size=0.25) +
geom_point(data = dat1, aes(x, y, color=z), size=1) +
labs(x = "Easting", y = "Northing") +
theme_bw()
ggplot() +
geom_sf(data = fl) +
coord_sf(xlim = c(min(dat$utmlong-20000), max(dat$utmlong+20000)),
ylim = c(min(dat$utmlat-20000), max(dat$utmlat+20000)), expand = FALSE) +
geom_path(data = borders_5f, aes(x=long, y=lat, group=group), size=0.25) +
geom_point(data = dat1, aes(x, y, color=z), size=1) +
scale_color_viridis_c() +
labs(x = "Easting", y = "Northing") +
theme_bw()
ggplot() +
geom_sf(data = fl) +
coord_sf(xlim = c(min(dat$utmlong-20000), max(dat$utmlong+20000)),
ylim = c(min(dat$utmlat-20000), max(dat$utmlat+20000)), expand = FALSE) +
geom_point(data = dat1, aes(x, y, color=z), size=1) +
scale_color_viridis_c() +
labs(x = "Easting", y = "Northing") +
theme_bw()
ggplot() +
geom_sf(data = fl) +
coord_sf(xlim = c(min(dat$utmlong-20000), max(dat$utmlong+20000)),
ylim = c(min(dat$utmlat-20000), max(dat$utmlat+20000)), expand = FALSE) +
geom_point(data = dat1, aes(x, y, color=z), size=1) +
scale_color_viridis_c() +
labs(x = "Easting", y = "Northing") +
theme_bw()
ac.coords<- res$coord[ngibbs,]
ac.coords
grid.coord
length(z)
nrow(z)
nrow(z$z)
length(z$z)
length(unique(z$z))
z
table(z$z)
ac.coords<- matrix(NA, length(unique(z$z)), 2)
tmp<- res$coord[ngibbs,]
for (i in 1:length(unique(z$z))) {
ac.coords[i,]<- c(tmp[i], tmp[i+length(z$z)])
}
View(ac.coords)
length(unique(z$z))
tmp[1]
tmp[1+18]
tmp[1+length(z$z)]
for (i in 1:length(unique(z$z))) {
ac.coords[i,]<- c(tmp[i], tmp[i+length(unique(z$z))])
}
z=data.frame(z=res$z[ngibbs,], time.seg = 1:nrow(dat))
z=data.frame(z=res$z[ngibbs,], time.seg = 1:nrow(obs1.seg))
table(z$z)
plot(y~x, data=ac.coord.init)
ac.coords<- matrix(NA, 37, 2)
tmp<- res$coord[ngibbs,]
for (i in 1:37) {
ac.coords[i,]<- c(tmp[i], tmp[i+37])
}
View(ac.coords)
View(ac.coords)
points(ac.coords[,2]~ac.coords[,1], col = "red")
plot(y~x, data=ac.coord.init)
plot(ac.coords[,2]~ac.coords[,1], col = "red")
plot(y~x, data=ac.coord.init)
points(ac.coords[,2]~ac.coords[,1], col = "red")
z$z
setwd("~/Documents/Snail Kite Project/Data/R Scripts/git_segmentation_model")
set.seed(1)
library(dplyr)
library(ggplot2)
library(coda)
library(raster)
source('gibbs functions2.R')
source('helper functions.R')
source('gibbs sampler2.R')
source('gibbs functions2.R')
source('helper functions.R')
source('gibbs sampler2.R')
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ",")
source('helper functions.R')
grid_5<- create.grid(dat, utm.crs, extent, res, buffer)
extent()
extent
utm.crs<- CRS("+init=epsg:32617")
extent<- extent(min(dat$utmlong), max(dat$utmlong),
min(dat$utmlat), max(dat$utmlat))
res<- 5000
buffer<- 10000
grid_5<- create.grid(dat, utm.crs, extent, res, buffer)
grid_5
plot(grid_5)
extent
grid<- raster(extent + buffer)
plot(grid)
res(grid)<- res
proj4string(grid)<- crs
proj4string(grid)<- utm.crs
grid[]<- 0
plot(grid)
utm.crs<- CRS("+init=epsg:32617")
extent<- extent(min(dat$utmlong), max(dat$utmlong),
min(dat$utmlat), max(dat$utmlat))
res<- 5000
buffer<- 10000
grid_5<- create.grid(dat=dat, crs=utm.crs, extent=extent, res=res, buffer=buffer)
plot(grid_5)
source('helper functions.R')
grid_5<- create.grid(dat=dat, crs=utm.crs, extent=extent, res=res, buffer=buffer)
plot(grid_5)
source('helper functions.R')
dat.list<- df.to.list(dat = dat)
foo<- data.frame(obs) %>% filter(id == 1) %>% dplyr::select(-id) %>% mutate(time1=1:nrow())
#Create occupancy matrices
obs<- matrix(0, nrow(dat), length(grid_5))
dim(obs)
colnames(obs)=paste0('grid.cell_',1:length(grid_5))
obs<- obs[,apply(obs,2,sum) != 0]
dim(obs)
#Create occupancy matrices
obs<- matrix(0, nrow(dat), length(grid_5))
for (i in 1:nrow(dat)){
obs[i,dat$grid.cell[i]]=1
}
colnames(obs)=paste0('grid.cell_',1:length(grid_5))
apply(obs,2,sum)
apply(obs,2,sum) != 0
obs[,apply(obs,2,sum) != 0]
obs<- obs[,apply(obs,2,sum) != 0]
dim(obs)
obs<- cbind(dat$id, obs)
dim(obs)
colnames(obs)[1]<- "id"
foo<- data.frame(obs) %>% filter(id == 1) %>% dplyr::select(-id) %>% mutate(time1=1:nrow())
foo<- data.frame(obs) %>% filter(id == 1) %>% dplyr::select(-id) %>% mutate(time1=1:nrow(.))
View(foo)
foo<- data.frame(obs) %>% filter(id == 12) %>% dplyr::select(-id) %>% mutate(time1=1:nrow(.))
View(foo)
setwd("~/Documents/Snail Kite Project/Data/R Scripts/activity_center1")
dat1=dat %>% filter(id==1)
dat1<- assign.time.seg(obs1.seg, obs1.breakpts, dat1)
dat12=dat %>% filter(id==12)
obs1.breakpts<- read.csv("ID1 Breakpoints (5 km).csv", header = T, sep = ",")
obs1.breakpts=obs1.breakpts[,1]
obs12.breakpts<- read.csv("ID12 Breakpoints (5 km).csv", header = T, sep = ",")
obs12.breakpts=obs12.breakpts[,1]
obs19.breakpts<- read.csv("ID19 Breakpoints (5 km).csv", header = T, sep = ",")
obs19.breakpts=obs19.breakpts[,1]
obs27.breakpts<- read.csv("ID27 Breakpoints (5 km).csv", header = T, sep = ",")
obs27.breakpts=obs27.breakpts[,1]
setwd("~/Documents/Snail Kite Project/Data/R Scripts/git_segmentation_model")
obs1.breakpts<- read.csv("ID1 Breakpoints (5 km).csv", header = T, sep = ",")
obs1.breakpts=obs1.breakpts[,1]
obs12.breakpts<- read.csv("ID12 Breakpoints (5 km).csv", header = T, sep = ",")
obs12.breakpts=obs12.breakpts[,1]
obs19.breakpts<- read.csv("ID19 Breakpoints (5 km).csv", header = T, sep = ",")
obs19.breakpts=obs19.breakpts[,1]
obs27.breakpts<- read.csv("ID27 Breakpoints (5 km).csv", header = T, sep = ",")
obs27.breakpts=obs27.breakpts[,1]
obs1=data.frame(obs) %>% filter(id == 1) %>% dplyr::select(-id) %>% mutate(time1=1:nrow(.))
obs12=data.frame(obs) %>% filter(id == 12) %>% dplyr::select(-id) %>% mutate(time1=1:nrow(.))
obs19=data.frame(obs) %>% filter(id == 19) %>% dplyr::select(-id) %>% mutate(time1=1:nrow(.))
obs27=data.frame(obs) %>% filter(id == 27) %>% dplyr::select(-id) %>% mutate(time1=1:nrow(.))
nloc=ncol(obs)-1 #remove time1
obs1.seg=get.summary.stats(obs1.breakpts,obs1,nloc)
#write.csv(obs1.seg, "ID1 Seg x Loc.csv", row.names = F)
obs12.seg=get.summary.stats(obs12.breakpts,obs12,nloc)
#write.csv(obs12.seg, "ID12 Seg x Loc.csv", row.names = F)
obs19.seg=get.summary.stats(obs19.breakpts,obs19,nloc)
#write.csv(obs19.seg, "ID19 Seg x Loc.csv", row.names = F)
obs27.seg=get.summary.stats(obs27.breakpts,obs27,nloc)
#write.csv(obs27.seg, "ID27 Seg x Loc.csv", row.names = F)
dat1=dat %>% filter(id==1)
dat1<- assign.time.seg(obs1.seg, obs1.breakpts, dat1)
dat12=dat %>% filter(id==12)
dat12<- assign.time.seg(obs12.seg, obs12.breakpts, dat12)
dat19=dat %>% filter(id==19)
dat19<- assign.time.seg(obs19.seg, obs19.breakpts, dat19)
dat27=dat %>% filter(id==27)
dat27<- assign.time.seg(obs27.seg, obs27.breakpts, dat27)
dat<- rbind(dat1, dat12, dat19, dat27)
View(dat)
setwd("~/Documents/Snail Kite Project/Data/R Scripts/activity_center1")
write.csv(dat, "Snail Kite Gridded Data.csv", row.names = F)
ls()
ls(all=T)
library(dplyr)
library(ggplot2)
library(lubridate)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(sp)
library(raster)
library(rgdal)
dat<- read.csv("Modified Snail Kite Data_large.csv", header = T, sep = ",")
str(dat)
dat$ESTtime<- as_datetime(dat$ESTtime)
View(dat)
dat$dist<- dat$dist/1000  #convert to km
names(dat)[7]<- "dist_km"
dat$R2n<- dat$R2n/1000/1000  #convert to km^2
names(dat)[9]<- "R2n_km2"
str(dat)
sqrt((dat$utmlong[2]-dat$utmlong[1])^2 + dat$utmlat[2]-dat$utmlat[1])^2)
sqrt((dat$utmlong[2]-dat$utmlong[1])^2 + (dat$utmlat[2]-dat$utmlat[1])^2)
sqrt((dat$utmlong[3]-dat$utmlong[2])^2 + (dat$utmlat[3]-dat$utmlat[2])^2)
sqrt((dat$utmlong[3]-dat$utmlong[2])^2 + (dat$utmlat[3]-dat$utmlat[2])^2)/1000
sqrt((dat$dx[1])^2 + (dat$dy[1])^2)
#Turn df into SpatialPointsDataFrame
dat.coords<- data.frame(dat[,c("utmlong","utmlat")])
utm.crs<- CRS("+init=epsg:32617")
dat.spdf<- SpatialPointsDataFrame(coords = dat.coords, data = dat, proj4string = utm.crs)
#Load world map data
world <- ne_countries(scale = "medium", returnclass = "sf")
usa<- world %>% filter(admin == "United States of America") %>% st_transform(proj4string(dat.spdf))
#to define extent of plot based on all individuals in SF
dat.sf<- st_as_sf(dat.spdf)
grid_5<- raster(extent(dat.spdf) + 10000)
res(grid_5)<- 5000
proj4string(grid_5)<- utm.crs
grid_5[]<- 0
dat.spdf@data$grid.cell<- cellFromXY(grid_5, dat.spdf) #378 cells occupied from possible 4272 cells
View(dat.spdf)
View(dat.spdf@data)
unique(dat.spdf$grid.cell) %>% length()
### Write to CSV for further analysis
write.csv(dat.spdf@data, "Snail Kite Gridded Data_large.csv", row.names = F)
borders_5<- rasterToPolygons(grid_5, dissolve = F)
borders_5f<- fortify(borders_5)
grid_5f<- as.data.frame(grid_5, xy = TRUE)
ggplot() +
geom_sf(data = usa) +
coord_sf(datum = NA) +
coord_sf(xlim = c(min(dat$utmlong-20000), max(dat$utmlong+20000)),
ylim = c(min(dat$utmlat-20000), max(dat$utmlat+20000)), expand = FALSE) +
geom_tile(data=grid_5f, aes(x=x, y=y), fill="transparent") +
geom_path(data = borders_5f, aes(x=long, y=lat, group=group), size=0.25) +
geom_point(data = dat.spdf@data, aes(x=utmlong, y=utmlat, color=id), size=0.5, alpha=0.5) +
scale_color_viridis_d(alpha = 0.6) +
labs(x = "Easting", y = "Northing")
str(dat.spdf@data)
ggplot() +
geom_sf(data = usa) +
coord_sf(datum = NA) +
coord_sf(xlim = c(min(dat$utmlong-20000), max(dat$utmlong+20000)),
ylim = c(min(dat$utmlat-20000), max(dat$utmlat+20000)), expand = FALSE) +
geom_tile(data=grid_5f, aes(x=x, y=y), fill="transparent") +
geom_path(data = borders_5f, aes(x=long, y=lat, group=group), size=0.25) +
geom_point(data = dat.spdf@data, aes(x=utmlong, y=utmlat, color=as.factor(id)), size=0.5, alpha=0.5) +
scale_color_viridis_d(alpha = 0.6) +
labs(x = "Easting", y = "Northing")
#Load world map data
usa <- ne_states(country = "United States of America", returnclass = "sf")
fl<- usa %>% filter(state.name == "Florida") %>% st_transform(proj4string(dat.spdf))
View(usa)
fl<- usa %>% filter(name == "Florida") %>% st_transform(proj4string(dat.spdf))
plot(fl)
ggplot() +
geom_sf(data = fl) +
coord_sf(xlim = c(min(dat$utmlong-20000), max(dat$utmlong+20000)),
ylim = c(min(dat$utmlat-20000), max(dat$utmlat+20000)), expand = FALSE) +
geom_tile(data=grid_5f, aes(x=x, y=y), fill="transparent") +
geom_path(data = borders_5f, aes(x=long, y=lat, group=group), size=0.25) +
geom_point(data = dat.spdf@data, aes(x=utmlong, y=utmlat, color=as.factor(id)), size=0.5, alpha=0.5) +
scale_color_viridis_d(alpha = 0.6) +
labs(x = "Easting", y = "Northing")
ggplot() +
geom_sf(data = fl) +
coord_sf(xlim = c(min(dat$utmlong-20000), max(dat$utmlong+20000)),
ylim = c(min(dat$utmlat-20000), max(dat$utmlat+20000)), expand = FALSE) +
geom_tile(data=grid_5f, aes(x=x, y=y), fill="transparent") +
geom_path(data = borders_5f, aes(x=long, y=lat, group=group), size=0.25) +
geom_point(data = dat.spdf@data, aes(x=utmlong, y=utmlat, color=as.factor(id)), size=0.5, alpha=0.5) +
scale_color_viridis_d(alpha = 0.6) +
labs(x = "Easting", y = "Northing") +
theme_bw()
library(dplyr)
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ",")
summary(dat$dist_km)
dat %>% select(dist_km) %>% filter(id ==1) %>% summary()
dat %>% as.factor(id) %>% filter(id == 1) %>% select(dist_km)  %>% summary()
str(dat)
dat$id<- as.factor(dat$id)
str(dat)
dat %>% filter(id == 1) %>% select(dist_km)  %>% summary()
dat %>% group_by(id) %>% select(dist_km)  %>% summary()
dat %>% group_by(id) %>% select(id, dist_km) %>% summary(dist_km)
dat %>% group_by(id) %>% select(id, dist_km) %>% summary()
dat %>% filter(id == 1) %>% select(dist_km)  %>% summary()
dat %>% filter(id == 12) %>% select(dist_km)  %>% summary()
dat %>% filter(id == 19) %>% select(dist_km)  %>% summary()
dat %>% filter(id == 27) %>% select(dist_km)  %>% summary()
library(ggplot2)
ggplot()+
geom_histogram(dat, aes(x=dist_km)) +
theme_bw() +
labs(x = "Step Length (km)") +
facet_wrap(~id)
View(dat)
class(dat$id)
ggplot()+
geom_histogram(dat, aes(x=dist_km))
ggplot(dat, aes(x=dist_km))+
geom_histogram() +
theme_bw() +
labs(x = "Step Length (km)") +
facet_wrap(~id)
ggplot(dat, aes(x=dist_km))+
geom_histogram() +
theme_bw() +
labs(x = "\nStep Length (km)", y = "Count\n") +
facet_wrap(~id)
ggplot(dat, aes(x=dist_km))+
geom_histogram() +
theme_bw() +
labs(x = "\nStep Length (km)", y = "Count\n") +
facet_wrap(~id) +
theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14))
ggplot(dat, aes(x=dist_km))+
geom_histogram() +
theme_bw() +
labs(x = "\nStep Length (km)", y = "Count\n") +
facet_wrap(~id) +
theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14),
strip.text = element_text(face = "bold"))
ggplot(dat, aes(x=dist_km))+
geom_histogram() +
theme_bw() +
labs(x = "\nStep Length (km)", y = "Count\n") +
facet_wrap(~id) +
theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14),
strip.text = element_text(face = "bold", size = 12))
library(dplyr)
library(ggplot2)
library(raster)
source('gibbs functions2.R')
source('helper functions.R')
source('gibbs sampler2.R')
dat<- read.csv("Snail Kite Gridded Data_large.csv", header = T, sep = ",")
dat.list<- df.to.list(dat = dat)
View(dat.list)
View(dat.list[["1"]])
library(purrr)
dat.list<- dat.list %>% map(mutate(., time1 = 1:nrow(.)))
dat.list<- lapply(dat.list, ~mutate(., time1 = 1:nrow(.)))
dat.list<- lapply(dat.list, mutate(., time1 = 1:nrow(.)))
dat.list<- lapply(dat.list, mutate(time1 = 1:nrow(.)))
dat.list<- lapply(dat.list, mutate(time1 = 1:nrow()))
dat.list<- lapply(dat.list, function(x) x %>% mutate(time1 = 1:nrow(x)))
View(dat.list[["1"]])
View(dat.list[["5"]])
dat.ind<- map_dfr(dat.list, `[`) %>% dplyr::select(id, grid.cell, time1)
names(dat.ind)
names(dat.ind)[2]
names(dat.ind)[2]<- "loc.id"
View(dat.ind)
setwd("~/Documents/Snail Kite Project/Data")
write.csv(dat.ind, "Snail Kite Data_condensed.csv", row.names = F)
str(dat.ind)
dat.ind$loc.id<- dat.ind$loc.id %>% as.factor()
View(dat.ind)
str(dat.ind)
levels(dat.ind$loc.id)
dat.ind$loc.id
length(unique(dat.ind$loc.id))
dat.ind<- map_dfr(dat.list, `[`) %>% dplyr::select(id, grid.cell, time1)
names(dat.ind)[2]<- "loc.id"
dat.ind$loc.id<- dat.ind$loc.id %>% factor(levels = 1:length(unique(dat.ind$loc.id)))
View(dat.ind)
1:length(unique(dat.ind$loc.id))
unique(dat.ind$loc.id)
dat.ind<- map_dfr(dat.list, `[`) %>% dplyr::select(id, grid.cell, time1)
names(dat.ind)[2]<- "loc.id"
View(dat.ind)
dat.ind$loc.id<- dat.ind$loc.id %>% factor()
str(dat.ind)
levels(dat.ind$loc.id)
levels(dat.ind$loc.id)<- 1:length(unique(dat.ind$loc.id))
write.csv(dat.ind, "Snail Kite Data_condensed.csv", row.names = F)
